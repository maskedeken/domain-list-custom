name: Build geosite.dat
on:
  workflow_dispatch:
  schedule:
    - cron: "30 21 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15

      - name: Set variables
        run: |
          echo "CHINA_DOMAINS_URL=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/accelerated-domains.china.conf" >> $GITHUB_ENV
          echo "GOOGLE_DOMAINS_URL=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "APPLE_DOMAINS_URL=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "GFWLIST_DOMAINS_URL=https://cokebar.github.io/gfwlist2dnsmasq/gfwlist_domain.txt" >> $GITHUB_ENV
          echo "GFWLIST_EXTRAS_DOMAINS_URL=https://raw.githubusercontent.com/pexcn/gfwlist-extras/master/gfwlist-extras.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v2
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Append attribute rules
        run: |
          echo "include:geolocation-!cn@cn" >> ./community/data/cn
          echo "include:geolocation-cn@!cn" >> ./community/data/geolocation-\!cn

      - name: Create `google-cn`、`apple-cn`、`gfw`、 lists
        run: |
          curl -sSL $GOOGLE_DOMAINS_URL | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' > ./community/data/google-cn
          curl -sSL $APPLE_DOMAINS_URL | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' > ./community/data/apple-cn
          curl -sSL $GFWLIST_DOMAINS_URL | perl -ne '/^((?=^.{3,255})[a-zA-Z0-9][-_a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-_a-zA-Z0-9]{0,62})+)/ && print "$1\n"' >> ./community/data/gfw
          curl -sSL $GFWLIST_EXTRAS_DOMAINS_URL | perl -ne 'print if not /^(#|\s)/' >> ./community/data/gfw

      - name: Build geosite.dat file
        run: |
          go mod download
          go run ./ --datapath=./community/data

      - name: Rename to geosite.dat && generate sha256 hash
        run: |
          cd publish || exit 1
          mv dlc.dat geosite.dat
          sha256sum geosite.dat > geosite.dat.sha256sum

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "actions"
          git config --local user.email "action@github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false

      - name: Upload geosite.dat
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/geosite.dat
          asset_name: geosite.dat
          asset_content_type: application/octet-stream

      - name: Upload geosite.dat sha256sum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/geosite.dat.sha256sum
          asset_name: geosite.dat.sha256sum
          asset_content_type: text/plain
